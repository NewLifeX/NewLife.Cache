<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NewLife.Agent</name>
    </assembly>
    <members>
        <member name="T:NewLife.Agent.AgentServiceBase`1">
            <typeparam name="TService">服务类型</typeparam>
        </member>
        <member name="M:NewLife.Agent.AgentServiceBase`1.ServiceMain">
            <summary>服务主函数</summary>
        </member>
        <member name="T:NewLife.Agent.AgentServiceBase">
            <summary>服务程序基类</summary>
        </member>
        <member name="P:NewLife.Agent.AgentServiceBase.DisplayName">
            <summary>显示名</summary>
        </member>
        <member name="P:NewLife.Agent.AgentServiceBase.Description">
            <summary>描述</summary>
        </member>
        <member name="M:NewLife.Agent.AgentServiceBase.#ctor">
            <summary>初始化</summary>
        </member>
        <member name="M:NewLife.Agent.AgentServiceBase.Main">
            <summary>服务主函数</summary>
        </member>
        <member name="M:NewLife.Agent.AgentServiceBase.ShowStatus">
            <summary>显示状态</summary>
        </member>
        <member name="M:NewLife.Agent.AgentServiceBase.ShowMenu">
            <summary>显示菜单</summary>
        </member>
        <member name="M:NewLife.Agent.AgentServiceBase.AddMenu(System.Char,System.String,System.Action)">
            <summary>添加菜单</summary>
            <param name="key"></param>
            <param name="name"></param>
            <param name="callbak"></param>
        </member>
        <member name="M:NewLife.Agent.AgentServiceBase.StartWork(System.String)">
            <summary>开始工作</summary>
            <param name="reason"></param>
        </member>
        <member name="M:NewLife.Agent.AgentServiceBase.StopWork(System.String)">
            <summary>停止服务</summary>
            <param name="reason"></param>
        </member>
        <member name="M:NewLife.Agent.AgentServiceBase.DoCheck(System.Object)">
            <summary>服务管理线程封装</summary>
            <param name="data"></param>
        </member>
        <member name="M:NewLife.Agent.AgentServiceBase.CheckMemory">
            <summary>检查内存是否超标</summary>
            <returns>是否超标重启</returns>
        </member>
        <member name="M:NewLife.Agent.AgentServiceBase.CheckThread">
            <summary>检查服务进程的总线程数是否超标</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Agent.AgentServiceBase.CheckHandle">
            <summary>检查服务进程的句柄数是否超标</summary>
            <returns></returns>
        </member>
        <member name="F:NewLife.Agent.AgentServiceBase.Start">
            <summary>服务开始时间</summary>
        </member>
        <member name="M:NewLife.Agent.AgentServiceBase.CheckAutoRestart">
            <summary>检查自动重启</summary>
            <returns></returns>
        </member>
        <member name="M:NewLife.Agent.AgentServiceBase.Restart(System.String)">
            <summary>重启服务</summary>
            <param name="reason"></param>
        </member>
        <member name="M:NewLife.Agent.AgentServiceBase.OnStart(System.String[])">
            <summary>服务启动事件</summary>
            <param name="args"></param>
        </member>
        <member name="M:NewLife.Agent.AgentServiceBase.OnStop">
            <summary>服务停止事件</summary>
        </member>
        <member name="M:NewLife.Agent.AgentServiceBase.OnShutdown">
            <summary>在系统关闭时执行。 指定在系统关闭之前应该发生什么。</summary>
        </member>
        <member name="M:NewLife.Agent.AgentServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)">
            <summary>在计算机的电源状态已发生更改时执行。 这适用于便携式计算机，当他们进入挂起模式，这不是系统关闭相同。</summary>
            <param name="powerStatus"></param>
            <returns></returns>
        </member>
        <member name="M:NewLife.Agent.AgentServiceBase.OnSessionChange(System.ServiceProcess.SessionChangeDescription)">
            <summary>在终端服务器会话中接收的更改事件时执行</summary>
            <param name="changeDescription"></param>
        </member>
        <member name="P:NewLife.Agent.AgentServiceBase.WatchDogs">
            <summary>看门狗要保护的服务</summary>
        </member>
        <member name="M:NewLife.Agent.AgentServiceBase.CheckWatchDog">
            <summary>检查看门狗。</summary>
            <remarks>
            XAgent看门狗功能由管理线程完成，每分钟一次。
            检查指定的任务是否已经停止，如果已经停止，则启动它。
            </remarks>
        </member>
        <member name="P:NewLife.Agent.AgentServiceBase.Log">
            <summary>日志</summary>
        </member>
        <member name="M:NewLife.Agent.AgentServiceBase.WriteLog(System.String,System.Object[])">
            <summary>写日志</summary>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="T:NewLife.Agent.ServiceHelper">
            <summary>服务助手</summary>
        </member>
        <member name="P:NewLife.Agent.ServiceHelper.ExeName">
            <summary>Exe程序名</summary>
        </member>
        <member name="M:NewLife.Agent.ServiceHelper.Install(NewLife.Agent.AgentServiceBase,System.Boolean)">
            <summary>安装、卸载 服务</summary>
            <param name="service">服务对象</param>
            <param name="isinstall">是否安装</param>
        </member>
        <member name="M:NewLife.Agent.ServiceHelper.ControlService(NewLife.Agent.AgentServiceBase,System.Boolean)">
            <summary>启动、停止 服务</summary>
            <param name="service">服务对象</param>
            <param name="isstart"></param>
        </member>
        <member name="M:NewLife.Agent.ServiceHelper.RunCmd(System.String,System.Boolean,System.Boolean)">
            <summary>执行一个命令</summary>
            <param name="cmd"></param>
            <param name="showWindow"></param>
            <param name="waitForExit"></param>
        </member>
        <member name="M:NewLife.Agent.ServiceHelper.RunSC(System.String)">
            <summary>执行SC命令</summary>
            <param name="cmd"></param>
        </member>
        <member name="M:NewLife.Agent.ServiceHelper.IsInstalled(System.String)">
            <summary>是否已安装</summary>
        </member>
        <member name="M:NewLife.Agent.ServiceHelper.IsRunning(System.String)">
            <summary>是否已启动</summary>
        </member>
        <member name="M:NewLife.Agent.ServiceHelper.IsServiceInstalled(System.String)">
            <summary>是否已安装</summary>
        </member>
        <member name="M:NewLife.Agent.ServiceHelper.IsServiceRunning(System.String)">
            <summary>是否已启动</summary>
        </member>
        <member name="M:NewLife.Agent.ServiceHelper.WriteLine(System.String,System.Object[])">
            <summary>写日志</summary>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="T:NewLife.Agent.Setting">
            <summary>服务设置</summary>
        </member>
        <member name="P:NewLife.Agent.Setting.ServiceName">
            <summary>服务名</summary>
        </member>
        <member name="P:NewLife.Agent.Setting.DisplayName">
            <summary>显示名</summary>
        </member>
        <member name="P:NewLife.Agent.Setting.Description">
            <summary>服务描述</summary>
        </member>
        <member name="P:NewLife.Agent.Setting.MaxMemory">
            <summary>最大占用内存。超过最大占用时，整个服务进程将会重启，以释放资源。默认8096M</summary>
        </member>
        <member name="P:NewLife.Agent.Setting.MaxThread">
            <summary>最大线程数。超过最大占用时，整个服务进程将会重启，以释放资源。默认1000个</summary>
        </member>
        <member name="P:NewLife.Agent.Setting.MaxHandle">
            <summary>最大句柄数。超过最大占用时，整个服务进程将会重启，以释放资源。默认10000</summary>
        </member>
        <member name="P:NewLife.Agent.Setting.AutoRestart">
            <summary>自动重启时间。到达自动重启时间时，整个服务进程将会重启，以释放资源。默认0分，表示无限</summary>
        </member>
        <member name="P:NewLife.Agent.Setting.WatchDog">
            <summary>看门狗，保护其它服务，每分钟检查一次。多个服务名逗号分隔</summary>
        </member>
    </members>
</doc>
